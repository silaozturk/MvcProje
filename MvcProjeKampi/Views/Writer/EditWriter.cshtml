@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "EditWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h2>Personel Düzenleme Sayfası</h2>
<br />
@using (Html.BeginForm("EditWriter", "Writer", FormMethod.Post))
{
    <div class="form-group">
        @Html.Label("Personel ID")
        @Html.TextBoxFor(x => x.WriterId, new { @class = "form-control" })
        <br />
        @Html.Label("Personel Adı")
        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterName)
        <br />
        @Html.Label("Personel Soyadı")
        @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterSurName)
        <br />
        @Html.Label("Personel Mail Adresi")
        @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterMail)
        <br />
        @*@Html.Label("Personel Şifresi")
        @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterPassword)
        <br />*@
        @Html.Label("Personel Görsel Linki")
        @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterImage)
        <br />
        @Html.Label("Personel Hakkımda")
        @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbout)
        <br />
        <button class="btn btn-outline-success">Personel Bilgilerini Güncelle</button>
    </div>
    <script src="~/AdminLTE-3.0.4/plugins/jquery/jquery.min.js"></script>
}

